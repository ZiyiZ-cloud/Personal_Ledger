{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/SearchMonthly.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchMonthly() {\n  _s();\n\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    date: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n  const history = useNavigate();\n  const [expenses, setExpenses] = useState(null);\n  const CurrentUser = currentUser.user.username;\n  ;\n  useEffect(function getExpenses() {\n    getUserExpenses(CurrentUser);\n  }, []);\n  let newDate = new Date();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  async function getUserExpenses(username) {\n    let result = await LedgerApi.getByMonth(username, year, month);\n    console.log(result);\n    setExpenses(result);\n  }\n\n  function addExpense(evt) {\n    evt.preventDefault();\n    history(`/expenses/add`);\n  }\n  /** Handle form data changing */\n\n\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(f => ({ ...f,\n      [name]: value\n    }));\n    setFormErrors([]);\n  }\n\n  function selectedMonth(evt) {\n    evt.preventDefault();\n    let newYear;\n    let newMonth;\n    let date = new Date(formData.date);\n    newYear = date.getFullYear();\n    newMonth = date.getMonth() + 1;\n    console.log(newMonth.newYear);\n    history(`/expenses/year/${newYear}/month/${newMonth}`);\n  }\n\n  if (!expenses) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 26\n  }, this);\n  console.log(expenses.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: selectedMonth,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            className: \"form-control\",\n            value: formData.date,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: selectedMonth,\n          children: \"Search Monthly Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchMonthly, \"e7SRP3GbN+d3iTtyOCvdd2zzuPQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchMonthly;\nexport default SearchMonthly;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMonthly\");","map":{"version":3,"names":["React","useState","useEffect","useContext","LedgerApi","LoadingSpinner","UserContext","ExpenseCardList","useNavigate","SearchMonthly","currentUser","setCurrentUser","formData","setFormData","date","formErrors","setFormErrors","history","expenses","setExpenses","CurrentUser","user","username","getExpenses","getUserExpenses","newDate","Date","month","getMonth","year","getFullYear","result","getByMonth","console","log","addExpense","evt","preventDefault","handleChange","name","value","target","f","selectedMonth","newYear","newMonth","length"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/SearchMonthly.js"],"sourcesContent":["import React, {useState,useEffect,useContext} from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner'\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate } from \"react-router-dom\";\n\n\n\n\nfunction SearchMonthly(){\n\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n    const [formData, setFormData] = useState({\n        date: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n\n    const history = useNavigate();\n\n    const [expenses, setExpenses] = useState(null);\n\n    const CurrentUser = currentUser.user.username;;\n\n    useEffect(function getExpenses(){\n        getUserExpenses(CurrentUser);\n    },[]);\n\n    let newDate = new Date;\n\n    let month = newDate.getMonth()+1;\n    let year = newDate.getFullYear();\n\n\n    async function getUserExpenses(username){\n        let result = await LedgerApi.getByMonth(username,year,month);\n        console.log(result);\n        setExpenses(result)\n    }\n\n    function addExpense (evt){\n        evt.preventDefault();\n        history(`/expenses/add`);\n    }\n\n    /** Handle form data changing */\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(f => ({\n            ...f,\n            [name]: value,\n        }));\n        setFormErrors([]);\n        }\n\n    function selectedMonth (evt){\n        evt.preventDefault();\n        let newYear;\n        let newMonth;\n        let date = new Date(formData.date)\n        newYear = date.getFullYear();\n        newMonth = date.getMonth()+1;\n        console.log(newMonth.newYear);\n        history(`/expenses/year/${newYear}/month/${newMonth}`);\n    }\n\n    if(!expenses) return <LoadingSpinner />;\n\n    console.log(expenses.length);\n\n    return (\n        <div>\n            <div>\n                <form onSubmit={selectedMonth}>\n                <div className=\"form-group\">\n                  <label>Date</label>\n                  <input\n                    type=\"date\"\n                      name=\"date\"\n                      className=\"form-control\"\n                      value={formData.date}\n                      onChange={handleChange}\n                  />\n                </div>\n                <button onClick={selectedMonth}>Search Monthly Expenses</button>\n                </form>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default SearchMonthly;"],"mappings":"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"},"metadata":{},"sourceType":"module"}