{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport jwt from \"jwt-decode\";\nimport LedgerApi from './Api/api';\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport UserContext from \"./auth/UserContext\";\nimport Paths from \"./routes-nav/Routes\";\nimport ProfileForm from \"./profiles/ProfileForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TOKEN_STORAGE_ID = \"ledger-token\";\n\nfunction App() {\n  _s();\n\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  console.debug(\"App\", \"infoLoaded=\", infoLoaded, \"currentUser=\", currentUser, \"token=\", token); // Load user info from API. Until a user is logged in and they have a token,\n  // this should not run. It only needs to re-run when a user logs out, so\n  // the value of the token is a dependency for this effect.\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let {\n            username\n          } = jwt(token); // put the token on the Api class so it can use it to call the API.\n\n          LedgerApi.token = token;\n          let currentUser = await LedgerApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n\n      setInfoLoaded(true);\n    } // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n\n\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n  /** Handles site-wide logout. */\n\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n  /** Handles site-wide signup.\n  *\n  * Automatically logs them in (set token) upon signup.\n  *\n  * Make sure you await this function and check its return value!\n  */\n\n\n  async function signup(signupData) {\n    try {\n      let token = await LedgerApi.signup(signupData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n  /** Handles site-wide login.\n   *\n   * Make sure you await this function and check its return value!\n   */\n\n\n  async function login(loginData) {\n    try {\n      let token = await LedgerApi.login(loginData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  } // if (!infoLoaded) return <LoadingSpinner />;\n\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        currentUser,\n        setCurrentUser\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/:username\",\n        element: /*#__PURE__*/_jsxDEV(ProfileForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Paths, {\n        login: login,\n        signup: signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"r2zUiwL7+rY/nY4IxCQHgAfLP6I=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","React","useState","useEffect","jwt","LedgerApi","useLocalStorage","UserContext","Paths","ProfileForm","TOKEN_STORAGE_ID","App","infoLoaded","setInfoLoaded","currentUser","setCurrentUser","token","setToken","console","debug","loadUserInfo","getCurrentUser","username","err","error","logout","signup","signupData","success","errors","login","loginData"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/App.js"],"sourcesContent":["import { BrowserRouter } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport jwt from \"jwt-decode\";\nimport LedgerApi from './Api/api';\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport UserContext from \"./auth/UserContext\";\nimport Paths from \"./routes-nav/Routes\";\nimport ProfileForm from \"./profiles/ProfileForm\";\n\nexport const TOKEN_STORAGE_ID = \"ledger-token\";\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  console.debug(\n      \"App\",\n      \"infoLoaded=\", infoLoaded,\n      \"currentUser=\", currentUser,\n      \"token=\", token,\n  );\n\n  // Load user info from API. Until a user is logged in and they have a token,\n  // this should not run. It only needs to re-run when a user logs out, so\n  // the value of the token is a dependency for this effect.\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt(token);\n          // put the token on the Api class so it can use it to call the API.\n          LedgerApi.token = token;\n          let currentUser = await LedgerApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n\n    // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  /** Handles site-wide logout. */\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n    /** Handles site-wide signup.\n   *\n   * Automatically logs them in (set token) upon signup.\n   *\n   * Make sure you await this function and check its return value!\n   */\n     async function signup(signupData) {\n      try {\n        let token = await LedgerApi.signup(signupData);\n        setToken(token);\n        return { success: true };\n      } catch (errors) {\n        console.error(\"signup failed\", errors);\n        return { success: false, errors };\n      }\n    }\n  \n    /** Handles site-wide login.\n     *\n     * Make sure you await this function and check its return value!\n     */\n    async function login(loginData) {\n      try {\n        let token = await LedgerApi.login(loginData);\n        setToken(token);\n        return { success: true };\n      } catch (errors) {\n        console.error(\"login failed\", errors);\n        return { success: false, errors };\n      }\n    }\n\n\n  // if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n      <BrowserRouter>\n        <UserContext.Provider\n            value={{ currentUser, setCurrentUser }}>\n            <Route exact path='/:username' element={<ProfileForm />} />\n            <Paths login={login} signup={signup} />\n            \n        </UserContext.Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}