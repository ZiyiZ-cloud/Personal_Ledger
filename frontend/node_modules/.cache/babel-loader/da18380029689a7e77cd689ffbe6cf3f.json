{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass LedgerApi {\n  // the token for interactive with the API will be stored here.\n  static async request(endpoint) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"get\";\n    console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${LedgerApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  } // Individual API routes\n  //get current user\n\n\n  static async getUsers() {\n    let res = await this.request(``);\n    console.log(res.users[0]);\n    return res.users;\n  }\n\n}\n\nexport default LedgerApi;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","LedgerApi","request","endpoint","data","method","console","debug","url","headers","Authorization","token","params","err","error","response","message","Array","isArray","getUsers","res","log","users"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/Api/api.js"],"sourcesContent":["import axios from \"axios\";\n\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass LedgerApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") { \n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${LedgerApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n \n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  //get current user\n\n  static async getUsers(){\n      let res = await this.request(``);\n      console.log(res.users[0]);\n      return res.users;\n  }\n  \n\n}\n\n\nexport default LedgerApi;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,uBAAnD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAN,CAAgB;EACd;EAGoB,aAAPC,OAAO,CAACC,QAAD,EAAsC;IAAA,IAA3BC,IAA2B,uEAApB,EAAoB;IAAA,IAAhBC,MAAgB,uEAAP,KAAO;IACxDC,OAAO,CAACC,KAAR,CAAc,WAAd,EAA2BJ,QAA3B,EAAqCC,IAArC,EAA2CC,MAA3C;IAEA,MAAMG,GAAG,GAAI,GAAEX,QAAS,IAAGM,QAAS,EAApC;IACA,MAAMM,OAAO,GAAG;MAAEC,aAAa,EAAG,UAAST,SAAS,CAACU,KAAM;IAA3C,CAAhB;IACA,MAAMC,MAAM,GAAIP,MAAM,KAAK,KAAZ,GACTD,IADS,GAET,EAFN;;IAIA,IAAI;MACF,OAAO,CAAC,MAAMR,KAAK,CAAC;QAAEY,GAAF;QAAOH,MAAP;QAAeD,IAAf;QAAqBQ,MAArB;QAA6BH;MAA7B,CAAD,CAAZ,EAAsDL,IAA7D;IACD,CAFD,CAEE,OAAOS,GAAP,EAAY;MACZP,OAAO,CAACQ,KAAR,CAAc,YAAd,EAA4BD,GAAG,CAACE,QAAhC;MACA,IAAIC,OAAO,GAAGH,GAAG,CAACE,QAAJ,CAAaX,IAAb,CAAkBU,KAAlB,CAAwBE,OAAtC;MACA,MAAMC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAAzC;IACD;EACF,CApBa,CAsBd;EAEA;;;EAEqB,aAARG,QAAQ,GAAE;IACnB,IAAIC,GAAG,GAAG,MAAM,KAAKlB,OAAL,CAAc,EAAd,CAAhB;IACAI,OAAO,CAACe,GAAR,CAAYD,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAZ;IACA,OAAOF,GAAG,CAACE,KAAX;EACH;;AA9Ba;;AAoChB,eAAerB,SAAf"},"metadata":{},"sourceType":"module"}