{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/profiles/ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport LedgerApi from \"../Api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport Alert from \"../common/Alert\";\nimport useTimedMessage from \"../hooks/useTimedMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileForm() {\n  _s();\n\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]); // switch to use our fancy limited-time-display message hook\n\n  const [saveConfirmed, setSaveConfirmed] = useState(false); // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  console.debug(\"ProfileForm\", \"currentUser=\", currentUser, \"formData=\", formData, \"formErrors=\", formErrors, \"saveConfirmed=\", saveConfirmed);\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password\n    };\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await LedgerApi.saveProfile(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f,\n      password: \"\"\n    }));\n    setFormErrors([]);\n    setSaveConfirmed(true); // trigger reloading of user information throughout the site\n\n    setCurrentUser(updatedUser);\n  }\n  /** Handle form data changing */\n\n\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(f => ({ ...f,\n      [name]: value\n    }));\n    setFormErrors([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-6 col-lg-4 offset-md-3 offset-lg-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [\"username:\", formData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileForm, \"37HgBiIVgK82e+WT0P9hcuSwBNQ=\");\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["React","useState","useContext","LedgerApi","UserContext","Alert","useTimedMessage","ProfileForm","currentUser","setCurrentUser","formData","setFormData","firstName","lastName","email","username","password","formErrors","setFormErrors","saveConfirmed","setSaveConfirmed","console","debug","handleSubmit","evt","preventDefault","profileData","updatedUser","saveProfile","errors","f","handleChange","name","value","target"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/profiles/ProfileForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport LedgerApi from \"../Api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport Alert from \"../common/Alert\";\n\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n\nfunction ProfileForm() {\n    const { currentUser, setCurrentUser } = useContext(UserContext);\n    const [formData, setFormData] = useState({\n      firstName: currentUser.firstName,\n      lastName: currentUser.lastName,\n      email: currentUser.email,\n      username: currentUser.username,\n      password: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n  \n    // switch to use our fancy limited-time-display message hook\n    const [saveConfirmed, setSaveConfirmed] = useState(false);\n    // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n  \n    console.debug(\n        \"ProfileForm\",\n        \"currentUser=\", currentUser,\n        \"formData=\", formData,\n        \"formErrors=\", formErrors,\n        \"saveConfirmed=\", saveConfirmed,\n    );\n  \n    /** on form submit:\n     * - attempt save to backend & report any errors\n     * - if successful\n     *   - clear previous error messages and password\n     *   - show save-confirmed message\n     *   - set current user info throughout the site\n     */\n  \n    async function handleSubmit(evt) {\n      evt.preventDefault();\n  \n      let profileData = {\n        firstName: formData.firstName,\n        lastName: formData.lastName,\n        email: formData.email,\n        password: formData.password,\n      };\n  \n      let username = formData.username;\n      let updatedUser;\n  \n      try {\n        updatedUser = await LedgerApi.saveProfile(username, profileData);\n      } catch (errors) {\n        debugger;\n        setFormErrors(errors);\n        return;\n      }\n  \n      setFormData(f => ({ ...f, password: \"\" }));\n      setFormErrors([]);\n      setSaveConfirmed(true);\n  \n      // trigger reloading of user information throughout the site\n      setCurrentUser(updatedUser);\n    }\n  \n    /** Handle form data changing */\n    function handleChange(evt) {\n      const { name, value } = evt.target;\n      setFormData(f => ({\n        ...f,\n        [name]: value,\n      }));\n      setFormErrors([]);\n    }\n  \n    return (\n        <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n          <h3>Profile</h3>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              username:{formData.username}\n            </div>\n          </div>\n        </div>\n    );\n  }\n  \n  export default ProfileForm;\n  "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAGA,SAASC,WAAT,GAAuB;EAAA;;EACnB,MAAM;IAAEC,WAAF;IAAeC;EAAf,IAAkCP,UAAU,CAACE,WAAD,CAAlD;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;IACvCW,SAAS,EAAEJ,WAAW,CAACI,SADgB;IAEvCC,QAAQ,EAAEL,WAAW,CAACK,QAFiB;IAGvCC,KAAK,EAAEN,WAAW,CAACM,KAHoB;IAIvCC,QAAQ,EAAEP,WAAW,CAACO,QAJiB;IAKvCC,QAAQ,EAAE;EAL6B,CAAD,CAAxC;EAOA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C,CATmB,CAWnB;;EACA,MAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,KAAD,CAAlD,CAZmB,CAanB;;EAEAoB,OAAO,CAACC,KAAR,CACI,aADJ,EAEI,cAFJ,EAEoBd,WAFpB,EAGI,WAHJ,EAGiBE,QAHjB,EAII,aAJJ,EAImBO,UAJnB,EAKI,gBALJ,EAKsBE,aALtB;EAQA;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,eAAeI,YAAf,CAA4BC,GAA5B,EAAiC;IAC/BA,GAAG,CAACC,cAAJ;IAEA,IAAIC,WAAW,GAAG;MAChBd,SAAS,EAAEF,QAAQ,CAACE,SADJ;MAEhBC,QAAQ,EAAEH,QAAQ,CAACG,QAFH;MAGhBC,KAAK,EAAEJ,QAAQ,CAACI,KAHA;MAIhBE,QAAQ,EAAEN,QAAQ,CAACM;IAJH,CAAlB;IAOA,IAAID,QAAQ,GAAGL,QAAQ,CAACK,QAAxB;IACA,IAAIY,WAAJ;;IAEA,IAAI;MACFA,WAAW,GAAG,MAAMxB,SAAS,CAACyB,WAAV,CAAsBb,QAAtB,EAAgCW,WAAhC,CAApB;IACD,CAFD,CAEE,OAAOG,MAAP,EAAe;MACf;MACAX,aAAa,CAACW,MAAD,CAAb;MACA;IACD;;IAEDlB,WAAW,CAACmB,CAAC,KAAK,EAAE,GAAGA,CAAL;MAAQd,QAAQ,EAAE;IAAlB,CAAL,CAAF,CAAX;IACAE,aAAa,CAAC,EAAD,CAAb;IACAE,gBAAgB,CAAC,IAAD,CAAhB,CAvB+B,CAyB/B;;IACAX,cAAc,CAACkB,WAAD,CAAd;EACD;EAED;;;EACA,SAASI,YAAT,CAAsBP,GAAtB,EAA2B;IACzB,MAAM;MAAEQ,IAAF;MAAQC;IAAR,IAAkBT,GAAG,CAACU,MAA5B;IACAvB,WAAW,CAACmB,CAAC,KAAK,EAChB,GAAGA,CADa;MAEhB,CAACE,IAAD,GAAQC;IAFQ,CAAL,CAAF,CAAX;IAIAf,aAAa,CAAC,EAAD,CAAb;EACD;;EAED,oBACI;IAAK,SAAS,EAAC,2CAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE;QAAK,SAAS,EAAC,WAAf;QAAA,wBACYR,QAAQ,CAACK,QADrB;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUD;;GAhFMR,W;;KAAAA,W;AAkFP,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}