{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/routes-nav/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute(_ref) {\n  _s();\n\n  let {\n    exact,\n    path,\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(UserContext);\n  console.debug(\"PrivateRoute\", \"exact=\", exact, \"path=\", path, \"currentUser=\", currentUser);\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: exact,\n    path: path,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PrivateRoute, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Route","Navigate","UserContext","PrivateRoute","exact","path","children","currentUser","console","debug"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/routes-nav/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\n\nfunction PrivateRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  console.debug(\n      \"PrivateRoute\",\n      \"exact=\", exact,\n      \"path=\", path,\n      \"currentUser=\", currentUser,\n  );\n\n  if (!currentUser) {\n    return <Route element={<Navigate to=\"/\" replace />}/>;\n  }\n\n  return (\n      <Route exact={exact} path={path}>\n        {children}\n      </Route>\n  );\n}\n\nexport default PrivateRoute;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,SAASC,YAAT,OAAiD;EAAA;;EAAA,IAA3B;IAAEC,KAAF;IAASC,IAAT;IAAeC;EAAf,CAA2B;EAC/C,MAAM;IAAEC;EAAF,IAAkBR,UAAU,CAACG,WAAD,CAAlC;EAEAM,OAAO,CAACC,KAAR,CACI,cADJ,EAEI,QAFJ,EAEcL,KAFd,EAGI,OAHJ,EAGaC,IAHb,EAII,cAJJ,EAIoBE,WAJpB;;EAOA,IAAI,CAACA,WAAL,EAAkB;IAChB,oBAAO,QAAC,KAAD;MAAO,OAAO,eAAE,QAAC,QAAD;QAAU,EAAE,EAAC,GAAb;QAAiB,OAAO;MAAxB;QAAA;QAAA;QAAA;MAAA;IAAhB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACI,QAAC,KAAD;IAAO,KAAK,EAAEH,KAAd;IAAqB,IAAI,EAAEC,IAA3B;IAAA,UACGC;EADH;IAAA;IAAA;IAAA;EAAA,QADJ;AAKD;;GAnBQH,Y;;KAAAA,Y;AAqBT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}