{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/MonthlyExpenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport LineChart from '../common/MonthlyLineChart';\nimport PieChart from '../common/MonthlyPieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MonthlyExpenses() {\n  _s();\n\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  let {\n    year,\n    month\n  } = useParams();\n  const history = useNavigate();\n  const [expenses, setExpenses] = useState(null);\n  const [spending, setSpending] = useState(null);\n  const [saving, setSaving] = useState(null);\n  const CurrentUser = currentUser.user.username;\n  useEffect(function getExpenses() {\n    getUserExpenses(CurrentUser);\n    getUserMonthlySaving(CurrentUser);\n    getUserMonthlySpending(CurrentUser);\n    console.log(spending, saving);\n  }, []);\n\n  async function getUserExpenses(username) {\n    let result = await LedgerApi.getByMonth(username, year, month);\n    setExpenses(result);\n  }\n\n  async function getUserMonthlySpending(username) {\n    let result = await LedgerApi.getExpensesByDay(username, year, month);\n    setSpending(result);\n  }\n\n  async function getUserMonthlySaving(username) {\n    let result = await LedgerApi.getIncomesByDay(username, year, month);\n    setSaving(result);\n  }\n\n  function addExpense(evt) {\n    evt.preventDefault();\n    history(`/expenses/add`);\n  }\n\n  function searchMonthly(evt) {\n    evt.preventDefault();\n    history(`/expenses/searchmonthly`);\n  }\n\n  if (!expenses) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 30\n  }, this);\n  let title = `${year} - ${month} Expenses`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [expenses.expenses.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PieChart, {\n          username: CurrentUser,\n          year: year,\n          month: month,\n          chartTitle: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ExpenseCardList, {\n          expenses: expenses.expenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Sorry, no results were found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addExpense,\n        children: \"Add New Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchMonthly,\n        children: \"Search By Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MonthlyExpenses, \"7yvplOTTs7Qlc889CR+uBXdT3po=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MonthlyExpenses;\nexport default MonthlyExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlyExpenses\");","map":{"version":3,"names":["React","useState","useEffect","useContext","LedgerApi","LoadingSpinner","UserContext","ExpenseCardList","useNavigate","useParams","LineChart","PieChart","MonthlyExpenses","currentUser","setCurrentUser","year","month","history","expenses","setExpenses","spending","setSpending","saving","setSaving","CurrentUser","user","username","getExpenses","getUserExpenses","getUserMonthlySaving","getUserMonthlySpending","console","log","result","getByMonth","getExpensesByDay","getIncomesByDay","addExpense","evt","preventDefault","searchMonthly","title","length"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/MonthlyExpenses.js"],"sourcesContent":["import React, {useState,useEffect,useContext} from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner'\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate,useParams } from \"react-router-dom\";\nimport LineChart from '../common/MonthlyLineChart';\nimport PieChart from '../common/MonthlyPieChart';\n\n\n\nfunction MonthlyExpenses(){\n\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n\n    let {year, month} = useParams()\n\n    const history = useNavigate();\n\n    const [expenses, setExpenses] = useState(null);\n\n    const [spending,setSpending] = useState(null);\n    const [saving,setSaving] = useState(null);\n\n    const CurrentUser = currentUser.user.username;\n\n    useEffect(function getExpenses(){\n        getUserExpenses(CurrentUser);\n        getUserMonthlySaving(CurrentUser);\n        getUserMonthlySpending(CurrentUser);\n        console.log(spending,saving)\n    },[]);\n\n    async function getUserExpenses(username){\n        let result = await LedgerApi.getByMonth(username,year,month);\n        setExpenses(result)\n    }\n    async function getUserMonthlySpending(username){\n        let result = await LedgerApi.getExpensesByDay(username,year,month);\n        setSpending(result)\n    }\n    async function getUserMonthlySaving(username){\n        let result = await LedgerApi.getIncomesByDay(username,year,month);\n        setSaving(result)\n    }\n\n\n    function addExpense (evt){\n        evt.preventDefault();\n        history(`/expenses/add`);\n    }\n\n    function searchMonthly(evt){\n        evt.preventDefault();\n        \n        history(`/expenses/searchmonthly`);\n    }\n\n    if(!expenses    ) return <LoadingSpinner />;\n\n    let title = `${year} - ${month} Expenses`;\n\n    return (\n        <div>\n            <div>\n                {expenses.expenses.length\n                    ?   <div>\n                        <PieChart username={CurrentUser} year={year} month={month} chartTitle={title}/>\n                        {/* <LineChart username={CurrentUser} year={year} month={month} chartTitle={title}/> */}\n                        <ExpenseCardList expenses={expenses.expenses}/>\n                        </div>\n                    :<p className=\"lead\">Sorry, no results were found!</p>\n                }\n                <button onClick={addExpense}>Add New Expense</button>\n                <button onClick={searchMonthly}>Search By Month</button>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default MonthlyExpenses;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAkCC,UAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AAIA,SAASC,eAAT,GAA0B;EAAA;;EAEtB,MAAM;IAACC,WAAD;IAAcC;EAAd,IAAgCX,UAAU,CAACG,WAAD,CAAhD;EAEA,IAAI;IAACS,IAAD;IAAOC;EAAP,IAAgBP,SAAS,EAA7B;EAEA,MAAMQ,OAAO,GAAGT,WAAW,EAA3B;EAEA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;EAEA,MAAM,CAACmB,QAAD,EAAUC,WAAV,IAAyBpB,QAAQ,CAAC,IAAD,CAAvC;EACA,MAAM,CAACqB,MAAD,EAAQC,SAAR,IAAqBtB,QAAQ,CAAC,IAAD,CAAnC;EAEA,MAAMuB,WAAW,GAAGX,WAAW,CAACY,IAAZ,CAAiBC,QAArC;EAEAxB,SAAS,CAAC,SAASyB,WAAT,GAAsB;IAC5BC,eAAe,CAACJ,WAAD,CAAf;IACAK,oBAAoB,CAACL,WAAD,CAApB;IACAM,sBAAsB,CAACN,WAAD,CAAtB;IACAO,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAAqBE,MAArB;EACH,CALQ,EAKP,EALO,CAAT;;EAOA,eAAeM,eAAf,CAA+BF,QAA/B,EAAwC;IACpC,IAAIO,MAAM,GAAG,MAAM7B,SAAS,CAAC8B,UAAV,CAAqBR,QAArB,EAA8BX,IAA9B,EAAmCC,KAAnC,CAAnB;IACAG,WAAW,CAACc,MAAD,CAAX;EACH;;EACD,eAAeH,sBAAf,CAAsCJ,QAAtC,EAA+C;IAC3C,IAAIO,MAAM,GAAG,MAAM7B,SAAS,CAAC+B,gBAAV,CAA2BT,QAA3B,EAAoCX,IAApC,EAAyCC,KAAzC,CAAnB;IACAK,WAAW,CAACY,MAAD,CAAX;EACH;;EACD,eAAeJ,oBAAf,CAAoCH,QAApC,EAA6C;IACzC,IAAIO,MAAM,GAAG,MAAM7B,SAAS,CAACgC,eAAV,CAA0BV,QAA1B,EAAmCX,IAAnC,EAAwCC,KAAxC,CAAnB;IACAO,SAAS,CAACU,MAAD,CAAT;EACH;;EAGD,SAASI,UAAT,CAAqBC,GAArB,EAAyB;IACrBA,GAAG,CAACC,cAAJ;IACAtB,OAAO,CAAE,eAAF,CAAP;EACH;;EAED,SAASuB,aAAT,CAAuBF,GAAvB,EAA2B;IACvBA,GAAG,CAACC,cAAJ;IAEAtB,OAAO,CAAE,yBAAF,CAAP;EACH;;EAED,IAAG,CAACC,QAAJ,EAAkB,oBAAO,QAAC,cAAD;IAAA;IAAA;IAAA;EAAA,QAAP;EAElB,IAAIuB,KAAK,GAAI,GAAE1B,IAAK,MAAKC,KAAM,WAA/B;EAEA,oBACI;IAAA,uBACI;MAAA,WACKE,QAAQ,CAACA,QAAT,CAAkBwB,MAAlB,gBACO;QAAA,wBACA,QAAC,QAAD;UAAU,QAAQ,EAAElB,WAApB;UAAiC,IAAI,EAAET,IAAvC;UAA6C,KAAK,EAAEC,KAApD;UAA2D,UAAU,EAAEyB;QAAvE;UAAA;UAAA;UAAA;QAAA,QADA,eAGA,QAAC,eAAD;UAAiB,QAAQ,EAAEvB,QAAQ,CAACA;QAApC;UAAA;UAAA;UAAA;QAAA,QAHA;MAAA;QAAA;QAAA;QAAA;MAAA,QADP,gBAMI;QAAG,SAAS,EAAC,MAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPT,eASI;QAAQ,OAAO,EAAEmB,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAUI;QAAQ,OAAO,EAAEG,aAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GArEQ5B,e;UAIeH,S,EAEJD,W;;;KANXI,e;AAuET,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}