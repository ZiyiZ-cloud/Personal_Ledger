{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/MonthlyExpenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MonthlyExpenses() {\n  _s();\n\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  let {\n    year,\n    month\n  } = useParams();\n  const history = useNavigate();\n  const [expenses, setExpenses] = useState(null);\n  const CurrentUser = currentUser.user.username;\n  let nextM = month + 1;\n  let prevM = month - 1;\n  useEffect(async function getExpenses() {\n    if (year, month) {\n      getUserExpenses(CurrentUser);\n    }\n\n    if (year, nextM) {\n      setExpenses(await LedgerApi.getExpenses(CurrentUser, year, nextM));\n    }\n  }, []);\n\n  async function getUserExpenses(username) {\n    let result = await LedgerApi.getByMonth(username, year, month);\n    console.log(result);\n    setExpenses(result);\n  }\n\n  function addExpense(evt) {\n    evt.preventDefault();\n    history(`/expenses/add`);\n  }\n\n  function previousMonth(evt) {\n    let newYear;\n    let newMonth;\n\n    if (month === 1) {\n      newYear = year - 1;\n      newMonth = 12;\n    } else {\n      newYear = year;\n      newMonth = month - 1;\n    }\n\n    history(`/expenses/year/${newYear}/month/${newMonth}`);\n  }\n\n  function nextMonth(evt) {\n    let newYear;\n    let newMonth;\n\n    if (month === 12) {\n      newYear = year + 1;\n      newMonth = 1;\n    } else {\n      newYear = year;\n      newMonth = Number(month) + 1;\n    }\n\n    history(`/expenses/year/${newYear}/month/${newMonth}`);\n  }\n\n  if (!expenses) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [expenses.expenses.length ? /*#__PURE__*/_jsxDEV(ExpenseCardList, {\n        expenses: expenses.expenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Sorry, no results were found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addExpense,\n        children: \"Add New Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousMonth,\n        children: \"Previous Month Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextMonth,\n        children: \"Next Month Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MonthlyExpenses, \"kJ5vzRW3piVTsDQiTRIj2L+sB/E=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MonthlyExpenses;\nexport default MonthlyExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlyExpenses\");","map":{"version":3,"names":["React","useState","useEffect","useContext","LedgerApi","LoadingSpinner","UserContext","ExpenseCardList","useNavigate","useParams","MonthlyExpenses","currentUser","setCurrentUser","year","month","history","expenses","setExpenses","CurrentUser","user","username","nextM","prevM","getExpenses","getUserExpenses","result","getByMonth","console","log","addExpense","evt","preventDefault","previousMonth","newYear","newMonth","nextMonth","Number","length"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/MonthlyExpenses.js"],"sourcesContent":["import React, {useState,useEffect,useContext} from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner'\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\n\n\nfunction MonthlyExpenses(){\n\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n    let {year, month} = useParams()\n\n    const history = useNavigate();\n\n    const [expenses, setExpenses] = useState(null);\n\n    const CurrentUser = currentUser.user.username;\n\n    let nextM = month+1;\n    let prevM = month-1;\n\n    useEffect(async function getExpenses(){\n        if(year,month){\n        getUserExpenses(CurrentUser);\n        }\n        if(year,nextM){\n            setExpenses( await LedgerApi.getExpenses(CurrentUser,year,nextM) );\n        }\n    },[]);\n\n    async function getUserExpenses(username){\n        let result = await LedgerApi.getByMonth(username,year,month);\n        console.log(result);\n        setExpenses(result)\n    }\n\n    function addExpense (evt){\n        evt.preventDefault();\n        history(`/expenses/add`);\n    }\n\n    function previousMonth (evt){\n        let newYear;\n        let newMonth;\n        if(month ===1){\n            newYear = year-1;\n            newMonth = 12;\n        }else{\n            newYear = year;\n            newMonth = month-1;\n        }\n        history(`/expenses/year/${newYear}/month/${newMonth}`);\n    }\n\n    function nextMonth (evt){\n        let newYear;\n        let newMonth;\n        if(month ===12){\n            newYear = year+1;\n            newMonth = 1;\n        }else{\n            newYear = year;\n            newMonth = Number(month) + 1;\n        }\n        history(`/expenses/year/${newYear}/month/${newMonth}`);\n    }\n\n    if(!expenses) return <LoadingSpinner />;\n\n    return (\n        <div>\n            <div>\n                {expenses.expenses.length\n                    ?<ExpenseCardList expenses={expenses.expenses}/>\n                    :<p className=\"lead\">Sorry, no results were found!</p>\n                }\n                <button onClick={addExpense}>Add New Expense</button>\n                <button onClick={previousMonth}>Previous Month Expenses</button>\n                <button onClick={nextMonth}>Next Month Expenses</button>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default MonthlyExpenses;"],"mappings":"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"},"metadata":{},"sourceType":"module"}