{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/SearchMonthly.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate } from \"react-router-dom\";\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { DatePicker, MonthPicker, YearPicker, CalendarPicker, LocalizationProvider } from '@mui/lab';\nimport { Grid, Button, Box, Container } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst minDate = new Date('2020-01-01T00:00:00.000');\nconst maxDate = new Date('2034-01-01T00:00:00.000');\n\nfunction SearchMonthly() {\n  _s();\n\n  const [date, setDate] = useState(null);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    date: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n  const history = useNavigate();\n  const [expenses, setExpenses] = useState(null);\n  const CurrentUser = currentUser.user.username;\n  ;\n  useEffect(function getExpenses() {\n    getUserExpenses(CurrentUser);\n  }, []);\n  let newDate = new Date();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  async function getUserExpenses(username) {\n    let result = await LedgerApi.getByMonth(username, year, month);\n    console.log(result);\n    setExpenses(result);\n  }\n\n  function addExpense(evt) {\n    evt.preventDefault();\n    history(`/expenses/add`);\n  }\n  /** Handle form data changing */\n\n\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(f => ({ ...f,\n      [name]: value\n    }));\n    setFormErrors([]);\n  }\n\n  function selectedMonth(evt) {\n    evt.preventDefault();\n    let newYear;\n    let newMonth;\n    let newDate = new Date(date);\n    newYear = newDate.getFullYear();\n    newMonth = newDate.getMonth() + 1;\n    console.log(newMonth.newYear);\n    history(`/expenses/year/${newYear}/month/${newMonth}`);\n  }\n\n  if (!expenses) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 26\n  }, this);\n  console.log(expenses.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(CalendarPicker, {\n            date: date,\n            onChange: newDate => setDate(newDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(MonthPicker, {\n            date: date,\n            minDate: minDate,\n            maxDate: maxDate,\n            onChange: newDate => setDate(newDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            children: \"My button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      justify: \"center\",\n      color: \"secondary\",\n      variant: \"contained\",\n      size: \"large\",\n      component: \"a\",\n      onClick: selectedMonth,\n      sx: {\n        minWidth: 200\n      },\n      children: \"Search Monthly Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchMonthly, \"wWxqxhDXR6CCSTpCfez9gzTeAFs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchMonthly;\nexport default SearchMonthly;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMonthly\");","map":{"version":3,"names":["React","useState","useEffect","useContext","LedgerApi","LoadingSpinner","UserContext","ExpenseCardList","useNavigate","AdapterDateFns","DatePicker","MonthPicker","YearPicker","CalendarPicker","LocalizationProvider","Grid","Button","Box","Container","minDate","Date","maxDate","SearchMonthly","date","setDate","currentUser","setCurrentUser","formData","setFormData","formErrors","setFormErrors","history","expenses","setExpenses","CurrentUser","user","username","getExpenses","getUserExpenses","newDate","month","getMonth","year","getFullYear","result","getByMonth","console","log","addExpense","evt","preventDefault","handleChange","name","value","target","f","selectedMonth","newYear","newMonth","length","minWidth"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/SearchMonthly.js"],"sourcesContent":["import React, {useState,useEffect,useContext} from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner'\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate } from \"react-router-dom\";\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport {DatePicker,MonthPicker,YearPicker,CalendarPicker,LocalizationProvider} from '@mui/lab';\nimport { Grid,Button,Box , Container} from '@mui/material';\n\n\n\n\nconst minDate = new Date('2020-01-01T00:00:00.000');\nconst maxDate = new Date('2034-01-01T00:00:00.000');\n\nfunction SearchMonthly(){\n    const [date, setDate] = useState(null)\n\n\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n    const [formData, setFormData] = useState({\n        date: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n\n    const history = useNavigate();\n\n    const [expenses, setExpenses] = useState(null);\n\n    const CurrentUser = currentUser.user.username;;\n\n    useEffect(function getExpenses(){\n        getUserExpenses(CurrentUser);\n    },[]);\n\n    let newDate = new Date;\n\n    let month = newDate.getMonth()+1;\n    let year = newDate.getFullYear();\n\n\n    async function getUserExpenses(username){\n        let result = await LedgerApi.getByMonth(username,year,month);\n        console.log(result);\n        setExpenses(result)\n    }\n\n    function addExpense (evt){\n        evt.preventDefault();\n        history(`/expenses/add`);\n    }\n\n    /** Handle form data changing */\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(f => ({\n            ...f,\n            [name]: value,\n        }));\n        setFormErrors([]);\n        }\n\n    function selectedMonth (evt){\n        evt.preventDefault();\n        let newYear;\n        let newMonth;\n        let newDate = new Date(date)\n        newYear = newDate.getFullYear();\n        newMonth = newDate.getMonth()+1;\n        console.log(newMonth.newYear);\n        history(`/expenses/year/${newYear}/month/${newMonth}`);\n    }\n\n    if(!expenses) return <LoadingSpinner />;\n\n    console.log(expenses.length);\n\n    return (\n        <div>\n            {/* <div>\n                <form onSubmit={selectedMonth}>\n                <div className=\"form-group\">\n                  <label>Date</label>\n                  <input\n                    type=\"date\"\n                      name=\"date\"\n                      className=\"form-control\"\n                      value={formData.date}\n                      onChange={handleChange}\n                  />\n                </div>\n                <button onClick={selectedMonth}>Search Monthly Expenses</button>\n                </form>\n            </div> */}\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                    <CalendarPicker date={date} onChange={(newDate) => setDate(newDate)} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                    <MonthPicker\n                        date={date}\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        onChange={(newDate) => setDate(newDate)}\n                    />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                    {/* <YearPicker\n                        date={date}\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        isDateDisabled={() => false}\n                        onChange={(newDate) => setDate(newDate)}\n                    /> */}\n                    </Grid>\n                    <Box textAlign='center'>\n  <Button variant='contained'>\n     My button\n  </Button>\n</Box>\n                </Grid>\n                </LocalizationProvider>\n                {/* <button onClick={selectedMonth}>Search Monthly Expenses</button> */}\n                <Grid container justify=\"center\">\n                    <Button color=\"primary\" size=\"large\" type=\"submit\" variant=\"contained\">\n                    Sign Up\n                    </Button>\n                </Grid>\n                <Button\n                    justify='center'\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    component=\"a\"\n                    onClick={selectedMonth}\n                    sx={{ minWidth: 200 }}\n                >\n                    Search Monthly Expense\n                </Button>\n            \n        </div>\n    )\n\n}\n\nexport default SearchMonthly;"],"mappings":"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"},"metadata":{},"sourceType":"module"}