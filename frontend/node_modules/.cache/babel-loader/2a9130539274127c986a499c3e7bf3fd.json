{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/common/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport Chart from 'react-google-charts';\nimport LedgerApi from '../Api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineChart(_ref) {\n  _s();\n\n  let {\n    username,\n    year,\n    month,\n    chartTitle\n  } = _ref;\n  const [lineData, setLineData] = useState([['x', 'expense', 'income'], [0, 0, 0] // [1, 10, 5],\n  // [2, 23, 15],\n  // [3, 17, 9],\n  // [4, 18, 10],\n  // [5, 9, 5],\n  // [6, 11, 3],\n  // [7, 27, 19],\n  // [8,0,0],\n  // [9,0,0],\n  // [10,0,0],\n  // [11,0,0],\n  // [12,0,0],\n  // [13,0,0],\n  // [14,0,0],\n  // [15,0,0],\n  // [16,0,0],\n  // [17,0,0],\n  // [18,0,0],\n  // [19,0,0],\n  // [20,0,0],\n  // [21,0,0],\n  // [22,0,0],\n  // [23,0,0],\n  // [24,0,0],\n  // [25,0,0],\n  // [26,0,0],\n  // [27,0,0],\n  // [28,0,0],\n  // [29,0,0],\n  // [30,0,0],\n  // [31,0,0]\n  ]);\n  const [date, setDate] = useState(1);\n\n  while (date < 32) {\n    async function getdailyData(username, year, month, day) {\n      let income = await LedgerApi.getIncomesByDay(username, year, month, day);\n      console.log(income);\n      let expense = await LedgerApi.getExpensesByDay(username, year, month, day);\n      console.log(expense);\n    }\n  } //   async function getUserExpenses(username){\n  //     let result = await LedgerApi.getByMonth(username,year,month);\n  //     console.log(result);\n  //     setExpenses(result)\n  // }\n\n\n  const LineChartOptions = {\n    hAxis: {\n      title: 'Date'\n    },\n    vAxis: {\n      title: 'Expense/Income'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: chartTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '700px',\n      height: '410px',\n      chartType: \"LineChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this),\n      data: lineData,\n      options: LineChartOptions,\n      rootProps: {\n        'data-testid': '2'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LineChart, \"VGQcUMuKEdOijMNW+CCOFSUkz8c=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Component","useState","Chart","LedgerApi","LineChart","username","year","month","chartTitle","lineData","setLineData","date","setDate","getdailyData","day","income","getIncomesByDay","console","log","expense","getExpensesByDay","LineChartOptions","hAxis","title","vAxis"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/common/LineChart.js"],"sourcesContent":["import React, { Component,useState } from 'react'\nimport Chart from 'react-google-charts';\nimport LedgerApi from '../Api/api';\n\n\nfunction LineChart({username,year,month,chartTitle}) {\n\n\n  const [lineData,setLineData] = useState([\n    ['x', 'expense', 'income'],\n    [0,0,0],\n    // [1, 10, 5],\n    // [2, 23, 15],\n    // [3, 17, 9],\n    // [4, 18, 10],\n    // [5, 9, 5],\n    // [6, 11, 3],\n    // [7, 27, 19],\n    // [8,0,0],\n    // [9,0,0],\n    // [10,0,0],\n    // [11,0,0],\n    // [12,0,0],\n    // [13,0,0],\n    // [14,0,0],\n    // [15,0,0],\n    // [16,0,0],\n    // [17,0,0],\n    // [18,0,0],\n    // [19,0,0],\n    // [20,0,0],\n    // [21,0,0],\n    // [22,0,0],\n    // [23,0,0],\n    // [24,0,0],\n    // [25,0,0],\n    // [26,0,0],\n    // [27,0,0],\n    // [28,0,0],\n    // [29,0,0],\n    // [30,0,0],\n    // [31,0,0]\n  ])\n\n    const [date,setDate] = useState(1);\n    while(date<32){\n      async function getdailyData(username,year,month,day){\n        let income = await LedgerApi.getIncomesByDay(username,year,month,day);\n        console.log(income);\n        let expense = await LedgerApi.getExpensesByDay(username,year,month,day);\n        console.log( expense);\n      }\n    }\n  //   async function getUserExpenses(username){\n  //     let result = await LedgerApi.getByMonth(username,year,month);\n  //     console.log(result);\n  //     setExpenses(result)\n  // }\n    const LineChartOptions = {\n      hAxis: {\n        title: 'Date',\n      },\n      vAxis: {\n        title: 'Expense/Income',\n      },\n    }\n\n    return (\n      <div className=\"container mt-5\">\n        <h2>{chartTitle}</h2>\n        <Chart\n          width={'700px'}\n          height={'410px'}\n          chartType=\"LineChart\"\n          loader={<div>Loading Chart</div>}\n          data={lineData}\n          options={LineChartOptions}\n          rootProps={{ 'data-testid': '2' }}\n        />\n      </div>\n    )\n}\n\nexport default LineChart;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,SAASC,SAAT,OAAqD;EAAA;;EAAA,IAAlC;IAACC,QAAD;IAAUC,IAAV;IAAeC,KAAf;IAAqBC;EAArB,CAAkC;EAGnD,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,CACtC,CAAC,GAAD,EAAM,SAAN,EAAiB,QAAjB,CADsC,EAEtC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFsC,CAGtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAjCsC,CAAD,CAAvC;EAoCE,MAAM,CAACU,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC,CAAD,CAA/B;;EACA,OAAMU,IAAI,GAAC,EAAX,EAAc;IACZ,eAAeE,YAAf,CAA4BR,QAA5B,EAAqCC,IAArC,EAA0CC,KAA1C,EAAgDO,GAAhD,EAAoD;MAClD,IAAIC,MAAM,GAAG,MAAMZ,SAAS,CAACa,eAAV,CAA0BX,QAA1B,EAAmCC,IAAnC,EAAwCC,KAAxC,EAA8CO,GAA9C,CAAnB;MACAG,OAAO,CAACC,GAAR,CAAYH,MAAZ;MACA,IAAII,OAAO,GAAG,MAAMhB,SAAS,CAACiB,gBAAV,CAA2Bf,QAA3B,EAAoCC,IAApC,EAAyCC,KAAzC,EAA+CO,GAA/C,CAApB;MACAG,OAAO,CAACC,GAAR,CAAaC,OAAb;IACD;EACF,CA/CgD,CAgDnD;EACA;EACA;EACA;EACA;;;EACE,MAAME,gBAAgB,GAAG;IACvBC,KAAK,EAAE;MACLC,KAAK,EAAE;IADF,CADgB;IAIvBC,KAAK,EAAE;MACLD,KAAK,EAAE;IADF;EAJgB,CAAzB;EASA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,wBACE;MAAA,UAAKf;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MACE,KAAK,EAAE,OADT;MAEE,MAAM,EAAE,OAFV;MAGE,SAAS,EAAC,WAHZ;MAIE,MAAM,eAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJV;MAKE,IAAI,EAAEC,QALR;MAME,OAAO,EAAEY,gBANX;MAOE,SAAS,EAAE;QAAE,eAAe;MAAjB;IAPb;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcH;;GA5EQjB,S;;KAAAA,S;AA8ET,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}