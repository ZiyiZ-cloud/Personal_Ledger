{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/heroku/personal_ledger/frontend/src/common/MonthlyCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from './LoadingSpinner';\nimport { Bar } from 'react-chartjs-2';\nimport { Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineChart(_ref) {\n  _s();\n\n  let {\n    username,\n    year,\n    month,\n    chartTitle\n  } = _ref;\n  const [income, setIncome] = useState(null);\n  const [expense, setExpense] = useState(null); // const [ totalIncome,setTotalIncome] = useState(null);\n\n  async function getdailyData(username, year, month) {\n    setIncome(await LedgerApi.getIncomesByDay(username, year, month));\n    setExpense(await LedgerApi.getExpensesByDay(username, year, month)); // setTotalIncome ( await LedgerApi.getMonthlyTotalIncome(username,year,month))\n  }\n\n  useEffect(function getDailyData() {\n    getdailyData(username, year, month);\n    console.log(expense, income);\n  }, [month, username, year]);\n  if (!income) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 24\n  }, this);\n  if (!expense) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }, this); // if(!totalIncome) return <LoadingSpinner />;\n\n  let data = {\n    labels: expense.dailyExpense.map(x => x[0]),\n    datasets: [{\n      id: 1,\n      label: 'Expnese',\n      data: expense.dailyExpense.map(x => x[1]),\n      borderColor: \"red\",\n      backgroundColor: \"red\"\n    }, {\n      id: 2,\n      label: 'Income',\n      data: income.dailyIncome.map(x => x[1]),\n      borderColor: \"blue\",\n      backgroundColor: \"blue\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 9,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chartTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        datasetIdKey: \"id\",\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LineChart, \"OKRpBTDbDZSBrBEV2v1eVeuLuOk=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useState","LedgerApi","LoadingSpinner","Bar","Grid","LineChart","username","year","month","chartTitle","income","setIncome","expense","setExpense","getdailyData","getIncomesByDay","getExpensesByDay","getDailyData","console","log","data","labels","dailyExpense","map","x","datasets","id","label","borderColor","backgroundColor","dailyIncome"],"sources":["/Users/ziyizhang/Desktop/springboard/heroku/personal_ledger/frontend/src/common/MonthlyCategory.js"],"sourcesContent":["import React, { useEffect,useState } from 'react'\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from './LoadingSpinner';\nimport { Bar } from 'react-chartjs-2';\nimport { Grid } from '@mui/material';\n\n\n\n\nfunction LineChart({username,year,month,chartTitle}) {\n\n  const [income,setIncome] = useState(null);\n  const [expense,setExpense] = useState(null);\n  // const [ totalIncome,setTotalIncome] = useState(null);\n\n  async function getdailyData(username,year,month){\n    setIncome(await LedgerApi.getIncomesByDay(username,year,month));\n    setExpense( await LedgerApi.getExpensesByDay(username,year,month));\n    // setTotalIncome ( await LedgerApi.getMonthlyTotalIncome(username,year,month))\n  }\n\n    useEffect(function getDailyData(){\n      getdailyData(username,year,month);\n      console.log(expense,income);\n    },[ month, username, year])\n\n    if(!income) return <LoadingSpinner />;\n    if(!expense) return <LoadingSpinner />;\n    // if(!totalIncome) return <LoadingSpinner />;\n\n    let data = {\n      labels: expense.dailyExpense.map(x=>x[0]),\n      datasets: [\n        {\n          id: 1,\n          label: 'Expnese',\n          data: expense.dailyExpense.map(x=>x[1]),\n          borderColor: \"red\",\n          backgroundColor: \"red\",\n        },\n        {\n          id: 2,\n          label: 'Income',\n          data: income.dailyIncome.map(x=>x[1]),\n          borderColor:\"blue\",\n          backgroundColor:\"blue\",\n        },\n      ],\n    }\n\n    return (\n      <div className=\"container mt-5\">\n      <Grid item xs={9}>\n        <h2>{chartTitle}</h2>\n        <Bar\n          datasetIdKey='id'\n          data={data}\n        />\n      </Grid>\n      </div>\n      \n    )\n}\n\nexport default LineChart;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,IAAT,QAAqB,eAArB;;;AAKA,SAASC,SAAT,OAAqD;EAAA;;EAAA,IAAlC;IAACC,QAAD;IAAUC,IAAV;IAAeC,KAAf;IAAqBC;EAArB,CAAkC;EAEnD,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC,IAAD,CAAnC;EACA,MAAM,CAACY,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,IAAD,CAArC,CAHmD,CAInD;;EAEA,eAAec,YAAf,CAA4BR,QAA5B,EAAqCC,IAArC,EAA0CC,KAA1C,EAAgD;IAC9CG,SAAS,CAAC,MAAMV,SAAS,CAACc,eAAV,CAA0BT,QAA1B,EAAmCC,IAAnC,EAAwCC,KAAxC,CAAP,CAAT;IACAK,UAAU,CAAE,MAAMZ,SAAS,CAACe,gBAAV,CAA2BV,QAA3B,EAAoCC,IAApC,EAAyCC,KAAzC,CAAR,CAAV,CAF8C,CAG9C;EACD;;EAECT,SAAS,CAAC,SAASkB,YAAT,GAAuB;IAC/BH,YAAY,CAACR,QAAD,EAAUC,IAAV,EAAeC,KAAf,CAAZ;IACAU,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAoBF,MAApB;EACD,CAHQ,EAGP,CAAEF,KAAF,EAASF,QAAT,EAAmBC,IAAnB,CAHO,CAAT;EAKA,IAAG,CAACG,MAAJ,EAAY,oBAAO,QAAC,cAAD;IAAA;IAAA;IAAA;EAAA,QAAP;EACZ,IAAG,CAACE,OAAJ,EAAa,oBAAO,QAAC,cAAD;IAAA;IAAA;IAAA;EAAA,QAAP,CAlBoC,CAmBjD;;EAEA,IAAIQ,IAAI,GAAG;IACTC,MAAM,EAAET,OAAO,CAACU,YAAR,CAAqBC,GAArB,CAAyBC,CAAC,IAAEA,CAAC,CAAC,CAAD,CAA7B,CADC;IAETC,QAAQ,EAAE,CACR;MACEC,EAAE,EAAE,CADN;MAEEC,KAAK,EAAE,SAFT;MAGEP,IAAI,EAAER,OAAO,CAACU,YAAR,CAAqBC,GAArB,CAAyBC,CAAC,IAAEA,CAAC,CAAC,CAAD,CAA7B,CAHR;MAIEI,WAAW,EAAE,KAJf;MAKEC,eAAe,EAAE;IALnB,CADQ,EAQR;MACEH,EAAE,EAAE,CADN;MAEEC,KAAK,EAAE,QAFT;MAGEP,IAAI,EAAEV,MAAM,CAACoB,WAAP,CAAmBP,GAAnB,CAAuBC,CAAC,IAAEA,CAAC,CAAC,CAAD,CAA3B,CAHR;MAIEI,WAAW,EAAC,MAJd;MAKEC,eAAe,EAAC;IALlB,CARQ;EAFD,CAAX;EAoBA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACA,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,CAAf;MAAA,wBACE;QAAA,UAAKpB;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,GAAD;QACE,YAAY,EAAC,IADf;QAEE,IAAI,EAAEW;MAFR;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAYH;;GArDQf,S;;KAAAA,S;AAuDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}