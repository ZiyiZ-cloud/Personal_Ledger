{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/common/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport Chart from 'react-google-charts';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineChart(_ref) {\n  _s();\n\n  let {\n    username,\n    year,\n    month,\n    chartTitle\n  } = _ref;\n  const [income, setIncome] = useState(null);\n  const [expense, setExpense] = useState(null);\n  const [lineData, setLineData] = useState([['x', 'expense', 'income'], [0, 0, 0] // [1, 10, 5],\n  // [2, 23, 15],\n  // [3, 17, 9],\n  // [4, 18, 10],\n  // [5, 9, 5],\n  // [6, 11, 3],\n  // [7, 27, 19],\n  // [8,0,0],\n  // [9,0,0],\n  // [10,0,0],\n  // [11,0,0],\n  // [12,0,0],\n  // [13,0,0],\n  // [14,0,0],\n  // [15,0,0],\n  // [16,0,0],\n  // [17,0,0],\n  // [18,0,0],\n  // [19,0,0],\n  // [20,0,0],\n  // [21,0,0],\n  // [22,0,0],\n  // [23,0,0],\n  // [24,0,0],\n  // [25,0,0],\n  // [26,0,0],\n  // [27,0,0],\n  // [28,0,0],\n  // [29,0,0],\n  // [30,0,0],\n  // [31,0,0]\n  ]);\n\n  async function getdailyData(username, year, month) {\n    setIncome(await LedgerApi.getIncomesByDay(username, year, month));\n    setExpense(await LedgerApi.getExpensesByDay(username, year, month));\n  }\n\n  useEffect(function getDailyData() {\n    getdailyData(username, year, month);\n    console.log(expense, income);\n  }, []); //   useEffect(function getExpenses(){\n  //     getUserExpenses(CurrentUser);\n  // },[]);\n  //   async function getUserExpenses(username){\n  //     let result = await LedgerApi.getByMonth(username,year,month);\n  //     console.log(result);\n  //     setExpenses(result)\n  // }\n\n  const LineChartOptions = {\n    hAxis: {\n      title: 'Date'\n    },\n    vAxis: {\n      title: 'Expense/Income'\n    }\n  };\n  if (!income.dailyIncome) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 36\n  }, this);\n  if (!expense.dailyExpense) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 38\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: chartTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), income.dailyIncome.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"income data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no income data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 22\n    }, this), expense.dailyExpense.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"expense data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no expense data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '700px',\n      height: '410px',\n      chartType: \"LineChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }, this),\n      data: lineData,\n      options: LineChartOptions,\n      rootProps: {\n        'data-testid': '2'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LineChart, \"h0AFqTPQ9XALkViPOGvvJYKaAj0=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Component","useEffect","useState","Chart","LedgerApi","LoadingSpinner","LineChart","username","year","month","chartTitle","income","setIncome","expense","setExpense","lineData","setLineData","getdailyData","getIncomesByDay","getExpensesByDay","getDailyData","console","log","LineChartOptions","hAxis","title","vAxis","dailyIncome","dailyExpense","length"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/common/LineChart.js"],"sourcesContent":["import React, { Component,useEffect,useState } from 'react'\nimport Chart from 'react-google-charts';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from './LoadingSpinner'\n\n\nfunction LineChart({username,year,month,chartTitle}) {\n\n  const [income,setIncome] = useState(null);\n  const [expense,setExpense] = useState(null);\n\n  const [lineData,setLineData] = useState([\n    ['x', 'expense', 'income'],\n    [0,0,0],\n    // [1, 10, 5],\n    // [2, 23, 15],\n    // [3, 17, 9],\n    // [4, 18, 10],\n    // [5, 9, 5],\n    // [6, 11, 3],\n    // [7, 27, 19],\n    // [8,0,0],\n    // [9,0,0],\n    // [10,0,0],\n    // [11,0,0],\n    // [12,0,0],\n    // [13,0,0],\n    // [14,0,0],\n    // [15,0,0],\n    // [16,0,0],\n    // [17,0,0],\n    // [18,0,0],\n    // [19,0,0],\n    // [20,0,0],\n    // [21,0,0],\n    // [22,0,0],\n    // [23,0,0],\n    // [24,0,0],\n    // [25,0,0],\n    // [26,0,0],\n    // [27,0,0],\n    // [28,0,0],\n    // [29,0,0],\n    // [30,0,0],\n    // [31,0,0]\n  ])\n\n  async function getdailyData(username,year,month){\n    setIncome(await LedgerApi.getIncomesByDay(username,year,month));\n    setExpense( await LedgerApi.getExpensesByDay(username,year,month));\n  }\n\n    useEffect(function getDailyData(){\n      getdailyData(username,year,month);\n      console.log(expense,income);\n    },[])\n\n\n  //   useEffect(function getExpenses(){\n  //     getUserExpenses(CurrentUser);\n  // },[]);\n\n  //   async function getUserExpenses(username){\n  //     let result = await LedgerApi.getByMonth(username,year,month);\n  //     console.log(result);\n  //     setExpenses(result)\n  // }\n    const LineChartOptions = {\n      hAxis: {\n        title: 'Date',\n      },\n      vAxis: {\n        title: 'Expense/Income',\n      },\n    }\n\n    if(!income.dailyIncome) return <LoadingSpinner />;\n    if(!expense.dailyExpense) return <LoadingSpinner />;\n\n\n    return (\n      <div className=\"container mt-5\">\n        <h2>{chartTitle}</h2>\n        {income.dailyIncome.length\n                    ?   <p>income data</p>\n                    :<p>no income data</p>}\n        {expense.dailyExpense.length\n                    ?   <p>expense data</p>\n                    :<p>no expense data</p>}\n        <Chart\n          width={'700px'}\n          height={'410px'}\n          chartType=\"LineChart\"\n          loader={<div>Loading Chart</div>}\n          data={lineData}\n          options={LineChartOptions}\n          rootProps={{ 'data-testid': '2' }}\n        />\n      </div>\n    )\n}\n\nexport default LineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}