{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/MonthlyExpenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MonthlyExpenses() {\n  _s();\n\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  let {\n    year,\n    month\n  } = useParams();\n  const history = useNavigate();\n  const [expenses, setExpenses] = useState(null);\n  const CurrentUser = currentUser.user.username;\n  useEffect(function getExpenses() {\n    getUserExpenses(CurrentUser);\n  }, []);\n\n  async function getUserExpenses(username) {\n    let result = await LedgerApi.getByMonth(username, year, month);\n    console.log(result);\n    setExpenses(result);\n  }\n\n  function addExpense(evt) {\n    evt.preventDefault();\n    history(`/expenses/add`);\n  } // function previousMonth (evt){\n  //     let newYear;\n  //     let newMonth;\n  //     if(month ===1){\n  //         newYear = year-1;\n  //         newMonth = 12;\n  //     }else{\n  //         newYear = year;\n  //         newMonth = month-1;\n  //     }\n  //     history(`/expenses/year/${newYear}/month/${newMonth}`,{replace: true});\n  // }\n  // function nextMonth (evt){\n  //     let newYear;\n  //     let newMonth;\n  //     if(month ===12){\n  //         newYear = year+1;\n  //         newMonth = 1;\n  //     }else{\n  //         newYear = year;\n  //         newMonth = Number(month) + 1;\n  //     }\n  //     history(`/expenses/year/${newYear}/month/${newMonth}`);\n  // }\n\n\n  function selectedMonth(evt) {\n    evt.preventDefault();\n    let newYear;\n    let newMonth;\n    let date = new Date(formData.date);\n    newYear = date.getFullYear();\n    newMonth = date.getMonth() + 1;\n    console.log(newMonth.newYear);\n    history(`/expenses/year/${newYear}/month/${newMonth}`);\n  }\n\n  if (!expenses) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [expenses.expenses.length ? /*#__PURE__*/_jsxDEV(ExpenseCardList, {\n        expenses: expenses.expenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Sorry, no results were found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addExpense,\n        children: \"Add New Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: selectedMonth,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            className: \"form-control\",\n            value: formData.date,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: selectedMonth,\n          children: \"Previous Month Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MonthlyExpenses, \"kJ5vzRW3piVTsDQiTRIj2L+sB/E=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MonthlyExpenses;\nexport default MonthlyExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlyExpenses\");","map":{"version":3,"names":["React","useState","useEffect","useContext","LedgerApi","LoadingSpinner","UserContext","ExpenseCardList","useNavigate","useParams","MonthlyExpenses","currentUser","setCurrentUser","year","month","history","expenses","setExpenses","CurrentUser","user","username","getExpenses","getUserExpenses","result","getByMonth","console","log","addExpense","evt","preventDefault","selectedMonth","newYear","newMonth","date","Date","formData","getFullYear","getMonth","length","handleChange"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/MonthlyExpenses.js"],"sourcesContent":["import React, {useState,useEffect,useContext} from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner'\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate,useParams } from \"react-router-dom\";\n\n\n\n\nfunction MonthlyExpenses(){\n\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n    let {year, month} = useParams()\n\n    const history = useNavigate();\n\n    const [expenses, setExpenses] = useState(null);\n\n    const CurrentUser = currentUser.user.username;\n\n    useEffect(function getExpenses(){\n        getUserExpenses(CurrentUser);\n    },[]);\n\n    async function getUserExpenses(username){\n        let result = await LedgerApi.getByMonth(username,year,month);\n        console.log(result);\n        setExpenses(result)\n    }\n\n    function addExpense (evt){\n        evt.preventDefault();\n        history(`/expenses/add`);\n    }\n\n    // function previousMonth (evt){\n    //     let newYear;\n    //     let newMonth;\n    //     if(month ===1){\n    //         newYear = year-1;\n    //         newMonth = 12;\n    //     }else{\n    //         newYear = year;\n    //         newMonth = month-1;\n    //     }\n    //     history(`/expenses/year/${newYear}/month/${newMonth}`,{replace: true});\n    // }\n\n    // function nextMonth (evt){\n    //     let newYear;\n    //     let newMonth;\n    //     if(month ===12){\n    //         newYear = year+1;\n    //         newMonth = 1;\n    //     }else{\n    //         newYear = year;\n    //         newMonth = Number(month) + 1;\n    //     }\n    //     history(`/expenses/year/${newYear}/month/${newMonth}`);\n    // }\n\n    function selectedMonth (evt){\n        evt.preventDefault();\n        let newYear;\n        let newMonth;\n        let date = new Date(formData.date)\n        newYear = date.getFullYear();\n        newMonth = date.getMonth()+1;\n        console.log(newMonth.newYear);\n        history(`/expenses/year/${newYear}/month/${newMonth}`);\n    }\n\n    if(!expenses) return <LoadingSpinner />;\n\n    return (\n        <div>\n            <div>\n                {expenses.expenses.length\n                    ?<ExpenseCardList expenses={expenses.expenses}/>\n                    :<p className=\"lead\">Sorry, no results were found!</p>\n                }\n                <button onClick={addExpense}>Add New Expense</button>\n                {/* <button onClick={previousMonth}>Previous Month Expenses</button>\n                <button onClick={nextMonth}>Next Month Expenses</button> */}\n                <form onSubmit={selectedMonth}>\n                <div className=\"form-group\">\n                  <label>Date</label>\n                  <input\n                    type=\"date\"\n                      name=\"date\"\n                      className=\"form-control\"\n                      value={formData.date}\n                      onChange={handleChange}\n                  />\n                </div>\n                <button onClick={selectedMonth}>Previous Month Expenses</button>\n                </form>\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default MonthlyExpenses;"],"mappings":"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"},"metadata":{},"sourceType":"module"}