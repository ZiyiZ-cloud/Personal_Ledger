{"ast":null,"code":"var _jsxFileName = \"/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/SearchMonthly.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate } from \"react-router-dom\";\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport Grid from '@mui/material/Grid';\nimport { DatePicker, MonthPicker, YearPicker, CalendarPicker, LocalizationProvider } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchMonthly() {\n  _s();\n\n  const [date, setDate] = useState(null);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    date: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n  const history = useNavigate();\n  const [expenses, setExpenses] = useState(null);\n  const CurrentUser = currentUser.user.username;\n  ;\n  useEffect(function getExpenses() {\n    getUserExpenses(CurrentUser);\n  }, []);\n  let newDate = new Date();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  async function getUserExpenses(username) {\n    let result = await LedgerApi.getByMonth(username, year, month);\n    console.log(result);\n    setExpenses(result);\n  }\n\n  function addExpense(evt) {\n    evt.preventDefault();\n    history(`/expenses/add`);\n  }\n  /** Handle form data changing */\n\n\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(f => ({ ...f,\n      [name]: value\n    }));\n    setFormErrors([]);\n  }\n\n  function selectedMonth(evt) {\n    evt.preventDefault();\n    let newYear;\n    let newMonth;\n    let date = new Date(formData.date);\n    newYear = date.getFullYear();\n    newMonth = date.getMonth() + 1;\n    console.log(newMonth.newYear);\n    history(`/expenses/year/${newYear}/month/${newMonth}`);\n  }\n\n  if (!expenses) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 26\n  }, this);\n  console.log(expenses.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: selectedMonth,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            className: \"form-control\",\n            value: formData.date,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: selectedMonth,\n          children: \"Search Monthly Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(CalendarPicker, {\n            date: date,\n            onChange: newDate => setDate(newDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(MonthPicker, {\n            date: date,\n            onChange: newDate => setDate(newDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(YearPicker, {\n            date: date,\n            isDateDisabled: () => false,\n            onChange: newDate => setDate(newDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: selectedMonth,\n      children: \"Search Monthly Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchMonthly, \"wWxqxhDXR6CCSTpCfez9gzTeAFs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchMonthly;\nexport default SearchMonthly;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMonthly\");","map":{"version":3,"names":["React","useState","useEffect","useContext","LedgerApi","LoadingSpinner","UserContext","ExpenseCardList","useNavigate","AdapterDateFns","Grid","DatePicker","MonthPicker","YearPicker","CalendarPicker","LocalizationProvider","SearchMonthly","date","setDate","currentUser","setCurrentUser","formData","setFormData","formErrors","setFormErrors","history","expenses","setExpenses","CurrentUser","user","username","getExpenses","getUserExpenses","newDate","Date","month","getMonth","year","getFullYear","result","getByMonth","console","log","addExpense","evt","preventDefault","handleChange","name","value","target","f","selectedMonth","newYear","newMonth","length"],"sources":["/Users/ziyizhang/Desktop/springboard/personal-ledger/fronend/src/expenses/SearchMonthly.js"],"sourcesContent":["import React, {useState,useEffect,useContext} from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner'\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate } from \"react-router-dom\";\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport Grid from '@mui/material/Grid';\nimport {DatePicker,MonthPicker,YearPicker,CalendarPicker,LocalizationProvider} from '@mui/lab';\n\n\nfunction SearchMonthly(){\n    const [date, setDate] = useState(null)\n\n\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n    const [formData, setFormData] = useState({\n        date: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n\n    const history = useNavigate();\n\n    const [expenses, setExpenses] = useState(null);\n\n    const CurrentUser = currentUser.user.username;;\n\n    useEffect(function getExpenses(){\n        getUserExpenses(CurrentUser);\n    },[]);\n\n    let newDate = new Date;\n\n    let month = newDate.getMonth()+1;\n    let year = newDate.getFullYear();\n\n\n    async function getUserExpenses(username){\n        let result = await LedgerApi.getByMonth(username,year,month);\n        console.log(result);\n        setExpenses(result)\n    }\n\n    function addExpense (evt){\n        evt.preventDefault();\n        history(`/expenses/add`);\n    }\n\n    /** Handle form data changing */\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(f => ({\n            ...f,\n            [name]: value,\n        }));\n        setFormErrors([]);\n        }\n\n    function selectedMonth (evt){\n        evt.preventDefault();\n        let newYear;\n        let newMonth;\n        let date = new Date(formData.date)\n        newYear = date.getFullYear();\n        newMonth = date.getMonth()+1;\n        console.log(newMonth.newYear);\n        history(`/expenses/year/${newYear}/month/${newMonth}`);\n    }\n\n    if(!expenses) return <LoadingSpinner />;\n\n    console.log(expenses.length);\n\n    return (\n        <div>\n            <div>\n                <form onSubmit={selectedMonth}>\n                <div className=\"form-group\">\n                  <label>Date</label>\n                  <input\n                    type=\"date\"\n                      name=\"date\"\n                      className=\"form-control\"\n                      value={formData.date}\n                      onChange={handleChange}\n                  />\n                </div>\n                <button onClick={selectedMonth}>Search Monthly Expenses</button>\n                </form>\n            </div>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={6}>\n                    <CalendarPicker date={date} onChange={(newDate) => setDate(newDate)} />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                    <MonthPicker\n                        date={date}\n                        onChange={(newDate) => setDate(newDate)}\n                    />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                    <YearPicker\n                        date={date}\n                        isDateDisabled={() => false}\n                        onChange={(newDate) => setDate(newDate)}\n                    />\n                    </Grid>\n                </Grid>\n                </LocalizationProvider>\n                <button onClick={selectedMonth}>Search Monthly Expenses</button>\n            \n        </div>\n    )\n\n}\n\nexport default SearchMonthly;"],"mappings":"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"},"metadata":{},"sourceType":"module"}