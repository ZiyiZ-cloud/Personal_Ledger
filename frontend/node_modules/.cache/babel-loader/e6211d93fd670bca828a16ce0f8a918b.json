{"ast":null,"code":"import _asyncToGenerator from\"/Users/ziyizhang/Desktop/springboard/heroku/personal_ledger/fronend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ziyizhang/Desktop/springboard/heroku/personal_ledger/fronend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/ziyizhang/Desktop/springboard/heroku/personal_ledger/fronend/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,useContext}from'react';import LedgerApi from'../Api/api';import LoadingSpinner from'../common/LoadingSpinner';import UserContext from'../auth/UserContext';import ExpenseCardList from'./ExpenseCardList';import{useNavigate,useParams}from\"react-router-dom\";import LineChart from'../common/MonthlyLineChart';import PieChart from'../common/MonthlyPieChart';import Balance from'../common/Balance';import TotalPieChart from'../common/MonthlyTotalPie';import EarningCard from'../MUI/DashBoard/EarningCard';import{Grid,Button,Box,Container}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MonthlyExpenses(){var _useContext=useContext(UserContext),currentUser=_useContext.currentUser,setCurrentUser=_useContext.setCurrentUser;var _useParams=useParams(),year=_useParams.year,month=_useParams.month;var history=useNavigate();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),expenses=_useState2[0],setExpenses=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),spending=_useState4[0],setSpending=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),saving=_useState6[0],setSaving=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),totalIncome=_useState8[0],setTotalIncome=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),TotalExpense=_useState10[0],setTotalExpense=_useState10[1];var CurrentUser=currentUser.user.username;useEffect(function getExpenses(){getUserExpenses(CurrentUser);getUserMonthlySaving(CurrentUser);getUserMonthlySpending(CurrentUser);getMonthlyTotalIncome(CurrentUser);getMonthlyTotalExpense(CurrentUser);console.log(spending,saving);},[]);function getUserExpenses(_x){return _getUserExpenses.apply(this,arguments);}function _getUserExpenses(){_getUserExpenses=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(username){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return LedgerApi.getByMonth(username,year,month);case 2:result=_context.sent;setExpenses(result);case 4:case\"end\":return _context.stop();}}},_callee);}));return _getUserExpenses.apply(this,arguments);}function getUserMonthlySpending(_x2){return _getUserMonthlySpending.apply(this,arguments);}function _getUserMonthlySpending(){_getUserMonthlySpending=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return LedgerApi.getExpensesByDay(username,year,month);case 2:result=_context2.sent;setSpending(result);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _getUserMonthlySpending.apply(this,arguments);}function getUserMonthlySaving(_x3){return _getUserMonthlySaving.apply(this,arguments);}function _getUserMonthlySaving(){_getUserMonthlySaving=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(username){var result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return LedgerApi.getIncomesByDay(username,year,month);case 2:result=_context3.sent;setSaving(result);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return _getUserMonthlySaving.apply(this,arguments);}function getMonthlyTotalIncome(_x4){return _getMonthlyTotalIncome.apply(this,arguments);}function _getMonthlyTotalIncome(){_getMonthlyTotalIncome=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(username){var result;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return LedgerApi.getMonthlyTotalIncome(username,year,month);case 2:result=_context4.sent;setTotalIncome(result);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return _getMonthlyTotalIncome.apply(this,arguments);}function getMonthlyTotalExpense(_x5){return _getMonthlyTotalExpense.apply(this,arguments);}function _getMonthlyTotalExpense(){_getMonthlyTotalExpense=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(username){var result;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return LedgerApi.getMonthlyTotalExpense(username,year,month);case 2:result=_context5.sent;setTotalExpense(result);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return _getMonthlyTotalExpense.apply(this,arguments);}function addExpense(evt){evt.preventDefault();history(\"/expenses/add\");}function searchMonthly(evt){evt.preventDefault();history(\"/expenses/searchmonthly\");}if(!expenses)return/*#__PURE__*/_jsx(LoadingSpinner,{});if(!totalIncome)return/*#__PURE__*/_jsx(LoadingSpinner,{});if(!TotalExpense)return/*#__PURE__*/_jsx(LoadingSpinner,{});var title=\"\".concat(year,\" - \").concat(month,\" Expenses\");return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:expenses.expenses.length?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,lg:4,md:6,sm:6,xs:12,children:/*#__PURE__*/_jsx(EarningCard,{cardName:\"Total Income\",amount:title})}),/*#__PURE__*/_jsx(Grid,{item:true,lg:4,md:6,sm:6,xs:12,children:/*#__PURE__*/_jsx(EarningCard,{cardName:\"Total Income\",amount:totalIncome.monthlytotalIncome.toFixed(2)})}),/*#__PURE__*/_jsx(Grid,{item:true,lg:4,md:6,sm:6,xs:12,children:/*#__PURE__*/_jsx(EarningCard,{cardName:\"Total Expense\",amount:TotalExpense.monthlytotalExpense.toFixed(2)})})]}),/*#__PURE__*/_jsx(Box,{component:\"main\",sx:{flexGrow:1,py:8},children:/*#__PURE__*/_jsx(Container,{maxWidth:false,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,lg:8,md:12,xl:9,xs:12,children:/*#__PURE__*/_jsx(LineChart,{username:CurrentUser,year:year,month:month,chartTitle:title})}),/*#__PURE__*/_jsx(Grid,{item:true,lg:4,md:6,xl:3,xs:12,children:/*#__PURE__*/_jsx(TotalPieChart,{totalIncome:totalIncome.monthlytotalIncome,totalExpense:TotalExpense.monthlytotalExpense})})]})})}),/*#__PURE__*/_jsx(PieChart,{username:CurrentUser,year:year,month:month,chartTitle:'Monthly Category Expenses'}),/*#__PURE__*/_jsx(ExpenseCardList,{expenses:expenses.expenses})]}):/*#__PURE__*/_jsx(\"p\",{className:\"lead\",children:\"Sorry, no results were found!\"})})});}export default MonthlyExpenses;","map":{"version":3,"names":["React","useState","useEffect","useContext","LedgerApi","LoadingSpinner","UserContext","ExpenseCardList","useNavigate","useParams","LineChart","PieChart","Balance","TotalPieChart","EarningCard","Grid","Button","Box","Container","MonthlyExpenses","currentUser","setCurrentUser","year","month","history","expenses","setExpenses","spending","setSpending","saving","setSaving","totalIncome","setTotalIncome","TotalExpense","setTotalExpense","CurrentUser","user","username","getExpenses","getUserExpenses","getUserMonthlySaving","getUserMonthlySpending","getMonthlyTotalIncome","getMonthlyTotalExpense","console","log","getByMonth","result","getExpensesByDay","getIncomesByDay","addExpense","evt","preventDefault","searchMonthly","title","length","monthlytotalIncome","toFixed","monthlytotalExpense","flexGrow","py"],"sources":["/Users/ziyizhang/Desktop/springboard/heroku/personal_ledger/fronend/src/expenses/MonthlyExpenses.js"],"sourcesContent":["import React, {useState,useEffect,useContext} from 'react';\nimport LedgerApi from '../Api/api';\nimport LoadingSpinner from '../common/LoadingSpinner'\nimport UserContext from '../auth/UserContext';\nimport ExpenseCardList from './ExpenseCardList';\nimport { useNavigate,useParams } from \"react-router-dom\";\nimport LineChart from '../common/MonthlyLineChart';\nimport PieChart from '../common/MonthlyPieChart';\nimport Balance from '../common/Balance';\nimport TotalPieChart from '../common/MonthlyTotalPie';\nimport EarningCard from '../MUI/DashBoard/EarningCard';\nimport { Grid,Button,Box , Container} from '@mui/material';\n\n\nfunction MonthlyExpenses(){\n\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n\n    let {year, month} = useParams()\n\n    const history = useNavigate();\n\n    const [expenses, setExpenses] = useState(null);\n\n    const [spending,setSpending] = useState(null);\n    const [saving,setSaving] = useState(null);\n    const [totalIncome,setTotalIncome] = useState(null);\n    const [TotalExpense,setTotalExpense] = useState(null); \n\n    const CurrentUser = currentUser.user.username;\n\n    useEffect(function getExpenses(){\n        getUserExpenses(CurrentUser);\n        getUserMonthlySaving(CurrentUser);\n        getUserMonthlySpending(CurrentUser);\n        getMonthlyTotalIncome(CurrentUser);\n        getMonthlyTotalExpense(CurrentUser);\n        console.log(spending,saving)\n    },[]);\n\n    async function getUserExpenses(username){\n        let result = await LedgerApi.getByMonth(username,year,month);\n        setExpenses(result)\n    }\n    async function getUserMonthlySpending(username){\n        let result = await LedgerApi.getExpensesByDay(username,year,month);\n        setSpending(result)\n    }\n    async function getUserMonthlySaving(username){\n        let result = await LedgerApi.getIncomesByDay(username,year,month);\n        setSaving(result)\n    }\n    async function getMonthlyTotalIncome(username){\n        let result = await LedgerApi.getMonthlyTotalIncome(username,year,month);\n        setTotalIncome(result)\n    }\n    async function getMonthlyTotalExpense(username){\n        let result = await LedgerApi.getMonthlyTotalExpense(username,year,month);\n        setTotalExpense(result)\n    }\n\n\n    function addExpense (evt){\n        evt.preventDefault();\n        history(`/expenses/add`);\n    }\n\n    function searchMonthly(evt){\n        evt.preventDefault();\n        \n        history(`/expenses/searchmonthly`);\n    }\n\n    if(!expenses) return <LoadingSpinner />;\n    if(!totalIncome) return <LoadingSpinner />;\n    if(!TotalExpense) return <LoadingSpinner />;\n\n    let title = `${year} - ${month} Expenses`;\n\n    return (\n        <div>\n            <div>\n                {expenses.expenses.length\n                    ?   <div>\n                        <Grid container spacing={3}>\n                            <Grid item lg={4} md={6} sm={6} xs={12}>\n                            <EarningCard cardName={\"Total Income\"} amount={title}/>\n                            </Grid>\n                            <Grid item lg={4} md={6} sm={6} xs={12}>\n                            <EarningCard cardName={\"Total Income\"} amount={totalIncome.monthlytotalIncome.toFixed(2)}/>\n                            </Grid>\n                            <Grid item lg={4} md={6} sm={6} xs={12}>\n                            <EarningCard cardName={\"Total Expense\"} amount={TotalExpense.monthlytotalExpense.toFixed(2)}/>\n                            </Grid>\n                        </Grid>\n                        <Box\n                            component=\"main\"\n                            sx={{\n                                flexGrow: 1,\n                                py: 8\n                            }}\n                            >\n                            <Container maxWidth={false}>\n                                <Grid\n                                container\n                                spacing={3}\n                                >\n                                \n                                <Grid\n                                    item\n                                    lg={8}\n                                    md={12}\n                                    xl={9}\n                                    xs={12}\n                                >\n                                    <LineChart username={CurrentUser} year={year} month={month} chartTitle={title}/>\n\n                                </Grid>\n                                <Grid\n                                    item\n                                    lg={4}\n                                    md={6}\n                                    xl={3}\n                                    xs={12}\n                                >                                    \n                                    <TotalPieChart totalIncome={totalIncome.monthlytotalIncome} totalExpense={TotalExpense.monthlytotalExpense} />\n                                </Grid>\n   \n                                </Grid>\n                            </Container>\n                            </Box>\n                            <PieChart username={CurrentUser} year={year} month={month} chartTitle={'Monthly Category Expenses'}/>\n                        {/* <PieChart username={CurrentUser} year={year} month={month} chartTitle={title}/>\n                        <LineChart username={CurrentUser} year={year} month={month} chartTitle={title}/>\n                        <Balance totalIncome={totalIncome} totalExpense={TotalExpense}/> */}\n                        <ExpenseCardList expenses={expenses.expenses}/>\n                        </div>\n                    :<p className=\"lead\">Sorry, no results were found!</p>\n                }\n                {/* <button onClick={addExpense}>Add New Expense</button>\n                <button onClick={searchMonthly}>Search By Month</button> */}\n            </div>\n            \n        </div>\n    )\n\n}\n\nexport default MonthlyExpenses;"],"mappings":"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"},"metadata":{},"sourceType":"module"}